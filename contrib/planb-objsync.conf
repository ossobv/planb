[SWIFT_CLIENT]
type = swift
user = USER:USER
key = SOMEKEY
auth = https://AUTHSERVER/auth/v1.0
tenant =
region =
storage_url =

; Translate in the 'document' container all paths that are (lowercase)
; GUID-style (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx) to "FU/LL/FULLGUID".
planb_translate_0 = document=^(([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{4}-){4}[0-9a-f]{12})$=\2/\3/\1
; Translate in the 'wsdl' container all paths that start with "YYYYMMDD"
; to "YYYY/MM/DD/"
planb_translate_1 = wsdl=^(\d{4})(\d{2})(\d{2})/=\1/\2/\3/
; Translate in all containers all paths (files) that end with a slash to %2F.
; (This will conflict with files actually having a %2F there, but that
; is not likely to happen.)
planb_translate_2 = *=/$=%2F
; (You may have multiple planb_translate or planb_translate_<N> keys.
; The advantage of the latter is that rclone-config-edit will not destroy
; them.)

; The planb-swiftsync will attempt to detect whether your container has
; Dynamic Large Objects (DLO) or Static Large Objects (SLO). If
; auto-detection fails, you can set this:
;planb_container_has_segments = always

; The location of the CA bundle to verify the server certificates.
; When set to "false" the certificate verification is disabled.
; Defaults to "true" and will use the client library default CA bundle.
;planb_ca_cert = /path/to/my-ca-bundle.crt

; The connect/read timeout (int/float)
; A single value is applied to both the connect and read timeout.
; The S3 client can set the connect and read timeout separately with
; comma separated values. The Swift client does not suport this and the
; connect timeout is used for both.
;planb_timeout = 60  ; 60s connect and read timeout (default)
;planb_timeout = 10, 30 ; 10s connect and 30s read timeout.


[S3_CLIENT]
type = s3
provider = Minio
access_key_id = USER
secret_access_key = SECRET_KEY
endpoint = https://MINIOSERVER

; The planb exclude/translate options apply to s3 storage too.
; planb_container_has_segments has no function on on s3 object storage.

; vim: set syn=dosini:
